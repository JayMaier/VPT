
step 0
recon loss: 0.556
discr loss: 1.972
validation recon loss 0.556
validation EMA recon loss 0.556
sample saved to results/sampled.0.gif
step 1
recon loss: 0.556
discr loss: 1.326
step 2
recon loss: 0.556
discr loss: 0.702
step 3
recon loss: 0.556
discr loss: 0.141
step 4
recon loss: 0.556
discr loss: 0.000
step 5
recon loss: 0.556
discr loss: 0.000
step 6
recon loss: 0.556
discr loss: 0.000
step 7
Traceback (most recent call last):
  File "/home/jay/VPT/src/train_magvit.py", line 49, in <module>
    trainer.train()
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/magvit2_pytorch/trainer.py", line 516, in train
    self.train_step(dl_iter)
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/magvit2_pytorch/trainer.py", line 346, in train_step
    data, *_ = next(dl_iter)
               ^^^^^^^^^^^^^
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/magvit2_pytorch/trainer.py", line 57, in cycle
    for data in dl:
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/accelerate/data_loader.py", line 461, in __iter__
    current_batch = send_to_device(current_batch, self.device)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/accelerate/utils/operations.py", line 177, in send_to_device
    return honor_type(
           ^^^^^^^^^^^
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/accelerate/utils/operations.py", line 81, in honor_type
    return type(obj)(generator)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/accelerate/utils/operations.py", line 178, in <genexpr>
    tensor, (send_to_device(t, device, non_blocking=non_blocking, skip_keys=skip_keys) for t in tensor)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jay/anaconda3/envs/magvit/lib/python3.12/site-packages/accelerate/utils/operations.py", line 155, in send_to_device
    return tensor.to(device, non_blocking=non_blocking)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt